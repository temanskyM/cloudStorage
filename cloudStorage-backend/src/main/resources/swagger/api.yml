openapi: 3.0.3
info:
  title: Cloud API
  description: Cloud API
  version: 1.0.0
servers:
  - url: ''
paths:
  /api/login:
    post:
      tags: [login]
      operationId: login
      description: Authorization method
      requestBody:
        description: Login and password hash
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Success authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessDto'
        '400':
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /api/logout:
    post:
      tags: [login]
      security:
        - bearerAuth: []
      operationId: logout
      description: Logout
      responses:
        '200':
          description: Success logout
  /api/file:
    post:
      tags: [file]
      security:
        - bearerAuth: []
      operationId: filePost
      description: Upload file to server
      parameters:
        - name: filename
          in: query
          schema:
            type: string
          description: File name to upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileDto'
      responses:
        '200':
          description: Success upload
        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    delete:
      tags: [file]
      security:
        - bearerAuth: []
      operationId: fileDelete
      description: Delete file
      parameters:
        - name: filename
          in: query
          schema:
            type: string
          description: File name to delete
          required: true
      responses:
        '200':
          description: Success deleted
        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Error delet file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
    put:
      tags: [file]
      security:
        - bearerAuth: []
      operationId: filePut
      description: Edit file name
      parameters:
        - name: filename
          in: query
          schema:
            type: string
          description: File name to upload
          required: true
      requestBody:
        description: Login and password hash
        required: true
        content:
          application/json:
            schema:
              title: hasFileNameDto
              type: object
              properties:
                filename:
                  type: string
      responses:
        '200':
          description: Success upload
        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Error upload file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /api/list:
    get:
      tags: [file]
      security:
        - bearerAuth: []
      operationId: getAll
      description: Get all files
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: Number requested items
      responses:
        '200':
          description: Success get list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DescriptionFileDto'

        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
        '500':
          description: Error getting file list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDto'
components:
  schemas:
    ErrorDto:
      type: object
      properties:
        message:
          type: string
          description: Error message
        id:
          type: integer
    FileDto:
      type: object
      properties:
        hash:
          type: string
        file:
          type: string
          format: binary
    LoginSuccessDto:
      type: object
      properties:
        auth-token:
          type: string
    LoginDto:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    DescriptionFileDto:
      type: object
      required:
        - filename
        - size
      properties:
        filename:
          type: string
          description: File name
        size:
          type: integer
          description: File size in bytes
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

