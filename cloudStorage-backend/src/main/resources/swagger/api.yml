openapi: 3.0.0
info:
  title: Cloud API
  description: Cloud API
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/cloud'
    description: local server
paths:
  /login:
    post:
      tags: [login]
      operationId: login
      description: Authorization method
      requestBody:
        description: Login and password hash
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSuccessDto'
      responses:
        '200':
          description: Success authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '400':
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logout:
    post:
      tags: [login]
      operationId: logout
      parameters:
        - in: header
          name: auth-token
          schema:
            type: string
          required: true
      description: Logout
      responses:
        '200':
          description: Success logout
  /file:
    post:
      tags: [file]
      operationId: filePost
      description: Upload file to server
      parameters:
        - in: header
          name: auth-token
          schema:
            type: string
          required: true
        - name: filename
          in: query
          schema:
            type: string
          description: File name to upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        '200':
          description: Success upload
        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags: [file]
      operationId: fileDelete
      description: Delete file
      parameters:
        - in: header
          name: auth-token
          schema:
            type: string
          required: true
        - name: filename
          in: query
          schema:
            type: string
          description: File name to delete
          required: true
      responses:
        '200':
          description: Success deleted
        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error delet file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags: [file]
      operationId: fileGet
      description: Dowload file from cloud
      parameters:
        - in: header
          name: auth-token
          schema:
            type: string
          required: true
        - name: filename
          in: query
          schema:
            type: string
          description: File name to download
      responses:
        '200':
          description: Success deleted
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error upload file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags: [file]
      operationId: filePut
      description: Edit file name
      parameters:
        - in: header
          name: auth-token
          schema:
            type: string
          required: true
        - name: filename
          in: query
          schema:
            type: string
          description: File name to upload
      requestBody:
        description: Login and password hash
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Success upload
        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error upload file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /list:
    get:
      tags: [file]
      operationId: getAll
      description: Get all files
      parameters:
        - in: header
          name: auth-token
          schema:
            type: string
          required: true
        - name: limit
          in: query
          schema:
            type: integer
          description: Number requested items
      responses:
        '200':
          description: Success get list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesDto'

        '400':
          description: Error input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error getting file list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        id:
          type: integer
    File:
      type: object
      properties:
        hash:
          type: string
        file:
          type: string
          format: binary
    Login:
      type: object
      properties:
        auth-token:
          type: string
    LoginSuccessDto:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    ListFilesDto:
      type: object
      required:
        - filename
        - size
      properties:
        filename:
          type: string
          description: File name
        size:
          type: integer
          description: File size in bytes